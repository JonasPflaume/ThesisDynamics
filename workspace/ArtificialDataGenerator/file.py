import os
import numpy as np
import re
import matplotlib.pyplot as plt

def trans_format(whichtraj):
    # traj_raw: the raw data generated by matlab
    with open('/home/jiayun/git/workspace/ArtificialDataGenerator/reference_traj/Trajectory_{}/gen_q0.txt'.format(whichtraj), 'r') as F:
        q0 = F.readlines()
        q0 = list(map(str.strip, q0))
        q0 = np.array(q0, dtype=float).reshape(1, 7)
        
    with open('/home/jiayun/git/workspace/ArtificialDataGenerator/reference_traj/Trajectory_{}/gen_dq.txt'.format(whichtraj), 'r') as F:
        dq = []
        for d_q in F:
            dq.append(d_q.strip())
        dq = np.array(dq, dtype=float)
        dq = dq.reshape(-1, 7)
        
    with open('/home/jiayun/git/workspace/ArtificialDataGenerator/reference_traj/Trajectory_{}/gen_ddq.txt'.format(whichtraj), 'r') as F:
        ddq = []
        for dd_q in F:
            ddq.append(dd_q.strip())
        ddq = np.array(ddq, dtype=float)
        ddq = ddq.reshape(-1, 7)
        
    with open('/home/jiayun/git/workspace/ArtificialDataGenerator/reference_traj/Trajectory_{}/gen_time.txt'.format(whichtraj), 'r') as F:
        t = []
        for t_ in F:
            t.append(t_.strip())
        t = np.array(t, dtype=float)
        t = t.reshape(-1, 1)
        
    if os.path.isdir('/home/jiayun/git/workspace/ArtificialDataGenerator/reference_traj/traj{}'.format(whichtraj)):
        pass
    else:
        os.mkdir('/home/jiayun/git/workspace/ArtificialDataGenerator/reference_traj/traj{}'.format(whichtraj))
    
    with open('/home/jiayun/git/workspace/ArtificialDataGenerator/reference_traj/traj{}/q0.txt'.format(whichtraj), 'w') as F:
        for item in q0:
            stuff = ' '.join(str(x) for x in item)
            F.write(stuff + '\n')
            
    with open('/home/jiayun/git/workspace/ArtificialDataGenerator/reference_traj/traj{}/dq.txt'.format(whichtraj), 'w') as F:
        for item in dq:
            stuff = ' '.join(str(x) for x in item)
            F.write(stuff + '\n')
            
    with open('/home/jiayun/git/workspace/ArtificialDataGenerator/reference_traj/traj{}/ddq.txt'.format(whichtraj), 'w') as F:
        for item in ddq:
            stuff = ' '.join(str(x) for x in item)
            F.write(stuff + '\n')
    
    with open('/home/jiayun/git/workspace/ArtificialDataGenerator/reference_traj/traj{}/t.txt'.format(whichtraj), 'w') as F:
        for item in t:
            stuff = ' '.join(str(x) for x in item)
            F.write(stuff + '\n')
    return t, q0, dq, ddq


def Convert_q(traj, verbose=True):
    '''
    function for picking a trajectory
    traj generated from 5 superpositioning harmonics
    
    traj: str
        the folder name of traj, start form traj0 ...
    return
        t - time stamp
        q - joints config
    '''
    
    with open('/home/jiayun/git/workspace/ArtificialDataGenerator/reference_traj/{}/q0.txt'.format(traj), 'r') as F:
        q0 = re.split(' |\n', F.readline())
        q0 = np.array(q0[:-1], dtype=float)

    with open('/home/jiayun/git/workspace/ArtificialDataGenerator/reference_traj/{}/t.txt'.format(traj), 'r') as F:
        t = []
        for item in F:
            t.append(item)
        t = np.array(t, dtype=float) + 2
        
    sampling_freq = int(len(t)/(max(t)-min(t))) # hz
    
    
    with open('/home/jiayun/git/workspace/ArtificialDataGenerator/reference_traj/{}/dq.txt'.format(traj), 'r') as F:
        dq = []
        for item in F:
            temp = re.split(' |\n', item)
            temp = np.array(temp[:-1], dtype=float)
            dq.append(temp)
        dq = np.array(dq).reshape(len(t), 7)

    q = np.zeros([*dq.shape])
    for idx, dqt in enumerate(dq):
        if idx == 0:
            q[idx,:] = q0
        else:
            q[idx,:] = q[idx-1,:] + dq[idx,:] * 1/sampling_freq
    if verbose:
        print("sampling frequency is: {} Hz".format(sampling_freq))
        plt.figure(figsize=[8, 4], dpi=80)
        plt.plot(t, q)
        plt.xlabel('Time [s]')
        plt.ylabel('Joints angular [rad]')
        plt.show()
    return q